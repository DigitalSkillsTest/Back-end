"use strict";var precacheConfig=[["/dskills/index.html","06720999bb2c48dbd4a247518712aa53"],["/dskills/static/css/main.d746bacb.css","d746bacbbcb1d240c58da7cf47cc4b87"],["/dskills/static/media/body-bg.06b79e39.svg","06b79e39ae32adaf5b06a18318c1d2fb"],["/dskills/static/media/bodyBg-2.c9090784.svg","c909078403d78a74506e7844159476df"],["/dskills/static/media/brain-color.5f73cc16.svg","5f73cc160ee0d35d1c10892e5afdea9a"],["/dskills/static/media/brain.642db5f4.svg","642db5f4a9694dfa10084b63a0a3a811"],["/dskills/static/media/category.7ad108f3.png","7ad108f3f7c01445cd0f295c5e350def"],["/dskills/static/media/chart.6057a69a.svg","6057a69abc6cb20d98aff807d1777d59"],["/dskills/static/media/chart2.c945fbce.png","c945fbce774c311d9056ff18bc07309f"],["/dskills/static/media/icon1.7c2b5bb7.svg","7c2b5bb7fef5496d7e0fb236b9939442"],["/dskills/static/media/info.9ff151e9.png","9ff151e98a70c2915cd3fefd60ea29e7"],["/dskills/static/media/logo-responsive.721b6dc8.svg","721b6dc8852fe06f1a4fa98bcd3ef2b0"],["/dskills/static/media/logo-white.1411c22a.svg","1411c22a8dcb0f03e5e2d45204a90ed2"],["/dskills/static/media/logo.e6b5186f.svg","e6b5186fc5fd88b4871089dd47707127"],["/dskills/static/media/question.acff85c9.svg","acff85c9aee72242c3ae476857b385e6"],["/dskills/static/media/result-category.c4fbcf4d.png","c4fbcf4d9bbe30b41edd172934aaaa3f"],["/dskills/static/media/shadow.f124a20d.svg","f124a20d99556b3493ca680b645d160e"],["/dskills/static/media/steps.2f6e9677.svg","2f6e9677ec4e8ed9d43560883b19a66e"],["/dskills/static/media/timer.01f5de8d.svg","01f5de8daa6acd3a1de1f039dbbbcdd2"],["/dskills/static/media/welcome.1da3552c.png","1da3552cda8857ff93571a2eb8fde5d1"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,s){var n=new URL(e);return s&&n.pathname.match(s)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],s=new URL(t,self.location),n=createCacheKey(s,hashParamName,a,/\.\w{8}\./);return[s.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(s){return setOfCachedUrls(s).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return s.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),s="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,s),e=urlsToCacheKeys.has(a));var n="/dskills/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});